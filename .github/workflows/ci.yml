name: CI - SEO Testing

on:
  push:
    branches: [ main, develop, SEOTest ]
  pull_request:
    branches: [ main, develop ]

jobs:
  seo-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
        form-factor: [mobile, desktop]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      run: npm run test
      env:
        BASE_URL: ${{ vars.BASE_URL || 'http://localhost:3000' }}
        LH_FORM_FACTOR: ${{ matrix.form-factor }}
        LH_PATHS: ${{ vars.LH_PATHS || '/' }}
        MIN_PERF: ${{ vars.MIN_PERF || '0.80' }}
        MIN_ACC: ${{ vars.MIN_ACC || '0.90' }}
        MIN_BP: ${{ vars.MIN_BP || '0.90' }}
        MIN_SEO: ${{ vars.MIN_SEO || '0.90' }}

    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.node-version }}-${{ matrix.form-factor }}
        path: playwright-report/
        retention-days: 30

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}-${{ matrix.form-factor }}
        path: test-results/
        retention-days: 30

  lighthouse-ci:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: seo-tests
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Run Lighthouse CI
      run: |
        npx lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        LHCI_SERVER_URL: ${{ vars.LHCI_SERVER_URL }}
        LHCI_TOKEN: ${{ secrets.LHCI_TOKEN }}

    - name: Upload Lighthouse reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-reports
        path: lhci-report/
        retention-days: 30

  performance-summary:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: [seo-tests, lighthouse-ci]
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Performance Summary
      run: |
        echo "## ðŸš€ Performance Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Test Results" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… SEO tests completed for all configurations" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸ“Š Lighthouse reports generated" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸŽ¯ Performance thresholds validated" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Artifacts" >> $GITHUB_STEP_SUMMARY
        echo "- Playwright reports available for download" >> $GITHUB_STEP_SUMMARY
        echo "- Lighthouse reports available for download" >> $GITHUB_STEP_SUMMARY
